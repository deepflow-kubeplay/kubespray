---
name: Build kubespray images

on:
  push:
    tags:
      - 'v*'
      - 'rc-*'
      - 'beta-*'
      - 'release-*'
    branches: 
      - 'main' 
      - 'beta-*'
      - 'release-*'
      - 'master' 
      - 'action'
    paths-ignore:
      - 'docs/**'

env:
  IMAGE_REGISTRY: "ghcr.io"
  REGISTRY_USER: "${{ github.repository_owner }}"
  REGISTRY_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
  IMAGE_REPO: "ghcr.io/${{ github.repository_owner }}/kubespray"
  BASE_IMAGE_REPO: "ghcr.io/${{ github.repository_owner }}/kubespray-base"

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          # fetch all git repo tag for define image tag
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.2.1

      - name: Log in to GitHub Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_TOKEN }}

      - name: Prepare for build images
        shell: bash
        run: |
          git describe --tags --always | sed 's/^/IMAGE_TAG=/' >> $GITHUB_ENV
          git branch --show-current | sed 's/^/BRANCH_NAME=/' >> $GITHUB_ENV
          git branch --show-current | sed 's/master/latest/;s/main/latest/;s/^/IMAGE_TAG_BY_BRANCH=/' >> $GITHUB_ENV
          sed -n 's/^kube_version: /KUBE_VERSION=/p' roles/kubespray-defaults/defaults/main.yaml >> $GITHUB_ENV
          cat build/kubespray-base/Dockerfile requirements.txt tests/requirements.txt .github/workflows/build.yaml \
          | md5sum | tr -d '\ -' | sed 's/^/BASE_MD5=md5-/' >> $GITHUB_ENV
          source $GITHUB_ENV
          if skopeo inspect docker://${BASE_IMAGE_REPO}:${BRANCH_NAME} > mainfest.json; then
            jq -r '.Labels.BASE_MD5' mainfest.json | sed 's/^/LATEST_BASE_MD5=/' >> $GITHUB_ENV
          else
            echo 'LATEST_BASE_MD5=null' >> $GITHUB_ENV
          fi

      - name: Replace Dockerfile if MD5 not update
        if: ${{ env.BASE_MD5 == env.LATEST_BASE_MD5 }}
        run: |
          echo "FROM ${{ env.BASE_IMAGE_REPO }}:${{ env.BASE_MD5 }}" > build/kubespray-base/Dockerfile

      - name: Build and push kubespray-base images
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          file: build/kubespray-base/Dockerfile
          platforms: linux/amd64,linux/arm64
          build-args: KUBE_VERSION=${{ env.KUBE_VERSION }}
          labels: BASE_MD5=${{ env.BASE_MD5 }}
          tags: |
            ${{ env.BASE_IMAGE_REPO }}:${{ env.IMAGE_TAG }}
            ${{ env.BASE_IMAGE_REPO }}:${{ env.BASE_MD5 }}
            ${{ env.BASE_IMAGE_REPO }}:${{ env.BRANCH_NAME }}
            ${{ env.BASE_IMAGE_REPO }}:${{ env.IMAGE_TAG_BY_BRANCH }}

      - name: Build and push kubespray images
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          file: build/kubespray/Dockerfile
          platforms: linux/amd64,linux/arm64
          build-args: |
            BASE_IMAGE=${{ env.BASE_IMAGE_REPO }}
            BASE_IMAGE_VERSION=${{ env.BASE_MD5 }}
          tags: |
            ${{ env.IMAGE_REPO }}:${{ env.IMAGE_TAG }}
            ${{ env.IMAGE_REPO }}:${{ env.BRANCH_NAME }}
            ${{ env.IMAGE_REPO }}:${{ env.IMAGE_TAG_BY_BRANCH }}
